% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeseries.R
\name{ee_timeseries}
\alias{ee_timeseries}
\alias{ee_timeseries.ee.imagecollection.ImageCollection}
\alias{ee_timeseries.exploreList}
\title{Extract Time Series}
\usage{
ee_timeseries(imageCol, ...)

\method{ee_timeseries}{ee.imagecollection.ImageCollection}(
  imageCol,
  geom,
  geeFC = NULL,
  scale,
  temporal = "yearly",
  temporal_stat = "mean",
  reducer = "mean",
  lazy = FALSE,
  startDate = NULL,
  endDate = NULL,
  months = NULL,
  ...
)

\method{ee_timeseries}{exploreList}(
  imageCol,
  geeFC = NULL,
  scale,
  temporal = "yearly",
  temporal_stat = "mean",
  reducer = "mean",
  lazy = FALSE,
  ...
)
}
\arguments{
\item{imageCol}{A previously created get_* object or ee ImageCollection}

\item{...}{extra args to pass on}

\item{geom}{A sf data.frame object.}

\item{geeFC}{A known GEE FeatureCollection or asset, e.g. "USGS/WBD/2017/HUC12"}

\item{scale}{\code{numeric} value indicating what to reduce the regions by, e.g. 800 (m) default.}

\item{temporal}{A \code{character} indicating what temporal filter to use on the collection, e.g. 'yearly' (default), 'monthly', 'year_month', 'all'.}

\item{temporal_stat}{A \code{character} indicating what to filter the ImageCollection when using temporal filtering, e.g. 'median' (default), 'mean',  'max', 'min', 'sum', 'stdDev', 'first'.}

\item{reducer}{A \code{character} indicating what to reduce the ImageCollection when using \link[rgee]{ee_extract} function, e.g. 'median' (default), 'mean',  'max', 'min', 'sum', 'stdDev', 'first'.}

\item{lazy}{\code{logical} whether to run a 'sequential' future in the background or not.}

\item{startDate}{\code{character} format date, e.g. "2018-10-23".}

\item{endDate}{\code{character} format date, e.g. "2018-10-23".}

\item{months}{\code{numeric} vector of monnths, e.g. c(1,12).}
}
\description{
This function allows the user to pass a previously created get_*() object or ee ImageCollection to get
a time series. This uses the \link[rgee]{ee_extract} function from rgee and does some tidying to return a sf data.frame.
}
\examples{
\dontrun{

# Load Libraries

library(rgee)
ee_Initialize()
library(exploreRGEE)

# Bring in data
huc <- exploreRGEE::huc

ld8 <- get_landsat(huc, method = 'ld8', startDate = '2014-01-01',
                  endDate = '2018-12-31', c.low = 6, c.high = 11)

# save both plot and data
ld8_ts <- ld8 \%>\% ee_timeseries()

}
}
